@model FinalProjectMvc.Models.Product

@{
    ViewData["Title"] = "Create";
}

<!-- Create Start -->
<div class="container-fluid pt-5">
    <div class="text-center mb-4">
        <h4 class="section-title px-5"><span class="px-2">Create New Product</span></h4>
    </div>
    <div class="row px-xl-5">
        <form asp-action="Create" enctype="multipart/form-data" class="row w-100">
            <!-- Left side: Form fields -->
            <div class="col-lg-7 mb-5">
                <div class="contact-form">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Price" class="control-label"></label>
                        <input asp-for="Price" class="form-control" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <textarea asp-for="Description" class="form-control"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="AvailableSizes" class="control-label">Avaliable Sizes</label>
                        <input asp-for="AvailableSizes" class="form-control" placeholder="Comma-separated: S,M,L" />
                        <span asp-validation-for="AvailableSizes" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="AvailableColors" class="control-label">Available Colors</label>
                        <input asp-for="AvailableColors" class="form-control" placeholder="Comma-separated: Red,Blue,Black" />
                        <span asp-validation-for="AvailableColors" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="StockQuantity" class="control-label">Stock Quantity</label>
                        <input asp-for="StockQuantity" class="form-control" />
                        <span asp-validation-for="StockQuantity" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Rating" class="control-label"></label>
                        <input asp-for="Rating" class="form-control" />
                        <span asp-validation-for="Rating" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>

            <!-- Right side: Image upload -->
            <div class="col-lg-5 mb-5">
                <div class="form-group">
                    <label>Product Image</label>
                    <div id="drop-zone" style="border: 2px dashed #ccc; padding: 40px; text-align: center; cursor: pointer;">
                        Drag & Drop or Click to Upload Image
                        <input type="file" id="fileInput" style="display:none;" />
                    </div>
                    <input type="hidden" asp-for="ImageUrl" id="ImageUrl" />
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                    <div id="preview" class="mt-3"></div>
                </div>
            </div>
        </form>
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>
<!-- Create End -->

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const dropZone = document.getElementById("drop-zone");
        const fileInput = document.getElementById("fileInput");
        const preview = document.getElementById("preview");
        const imageUrlInput = document.getElementById("ImageUrl");

        dropZone.addEventListener("click", () => fileInput.click());

        dropZone.addEventListener("dragover", (e) => {
            e.preventDefault();
            dropZone.style.borderColor = "green";
        });

        dropZone.addEventListener("dragleave", () => {
            dropZone.style.borderColor = "#ccc";
        });

        dropZone.addEventListener("drop", (e) => {
            e.preventDefault();
            dropZone.style.borderColor = "#ccc";
            const file = e.dataTransfer.files[0];
            uploadFile(file);
        });

        fileInput.addEventListener("change", (e) => {
            uploadFile(e.target.files[0]);
        });

        function uploadFile(file) {
            const formData = new FormData();
            formData.append("file", file);

            fetch("/Product/UploadImage", {
                method: "POST",
                body: formData
            })
            .then(response => response.text())
            .then(path => {
                imageUrlInput.value = path;
                preview.innerHTML = `<img src="${path}" class="img-fluid mt-2" style="max-width: 300px;" />`;
            })
            .catch(err => alert("Upload failed: " + err));
        }
    </script>
}
